//*** Abstracts Mixin: Calc Fluid Size ***//

@use '../variables/__index__' as var;

@use 'sass:math';


/// Calculates a fluid size value that scales smoothly between minimum and maximum sizes across a viewport range
/// @param {number} $remSize - Base font size in pixels used for rem calculations
/// @param {number} $minWidth - Minimum viewport width in pixels where fluid scaling begins
/// @param {number} $maxWidth - Maximum viewport width in pixels where fluid scaling stops
/// @param {number} $decimals - Number of decimal places to round calculations to
/// @param {string} $method - Method to use for fluid scaling ('clamp' or 'max')
/// @param {number} $minSize - Minimum size in pixels at the smallest viewport width
/// @param {number} $maxSize - Maximum size in pixels at the largest viewport width
/// @param {boolean} $vwx [false] - Whether to use CSS custom property --vwx for viewport width instead of vw units
/// @return {string} A fluid value using either clamp() or max() with calculated minimum, preferred, and maximum sizes
@function calc-fluid-size(
  $remSize,
  $minWidth,
  $maxWidth,
  $decimals,
  $method,
  $minSize,
  $maxSize,
  $vwx: false
) {

  // Convert px to rem (unitless)
  $minSizeRem: math.div($minSize, $remSize);
  $maxSizeRem: math.div($maxSize, $remSize);
  $minWidthRem: math.div($minWidth, $remSize);
  $maxWidthRem: math.div($maxWidth, $remSize);

  // Calculate slope: (max-min)/(max-width - min-width) * 100 for vw
  $slope: math.div(($maxSizeRem - $minSizeRem), ($maxWidthRem - $minWidthRem)) * 100;

  // Calculate intersection (y-intercept)
  $intersection: $minSizeRem - math.div($slope * $minWidthRem, 100);

  // Round to x decimal places
  $decimals: math.pow(10, $decimals);
  $minSizeRem: math.round($minSizeRem * $decimals) * math.div(1, $decimals);
  $maxSizeRem: math.round($maxSizeRem * $decimals) * math.div(1, $decimals);
  $slope: math.round($slope * $decimals) * math.div(1, $decimals);
  $intersection: math.round($intersection * $decimals) * math.div(1, $decimals);

  // Return calculated size
  @if $vwx {
    @return #{if(
      $method == 'clamp',
      clamp(#{$minSizeRem}rem, #{$slope} * var(--vwx) + #{$intersection}rem , #{$maxSizeRem}rem),
      max(#{$minSizeRem}rem, #{$slope} * var(--vwx) + #{$intersection}rem )
    )};
  } @else {
    @return #{if(
      $method == 'clamp',
      clamp(#{$minSizeRem}rem, #{$slope}vw + #{$intersection}rem, #{$maxSizeRem}rem),
      max(#{$minSizeRem}rem, #{$slope}vw + #{$intersection}rem)
    )};
  }
}